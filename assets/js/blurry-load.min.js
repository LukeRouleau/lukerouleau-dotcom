class BlurryImageLoad {
    constructor() {
        this.images = [];
        this.observer = null;
        this.supportsIntersectionObserver = 'IntersectionObserver' in window;
    }

    load() {
        this.images = document.querySelectorAll(".blurry-load:not(.loaded)");
        
        if (this.supportsIntersectionObserver) {
            this.setupIntersectionObserver();
        } else {
            this.loadImagesImmediately();
        }
    }
    
    setupIntersectionObserver() {
        const options = {
            rootMargin: '200px 0px',
            threshold: 0.01
        };
        
        this.observer = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    this.loadImage(entry.target);
                    observer.unobserve(entry.target);
                }
            });
        }, options);
        
        this.images.forEach(image => {
            // Only observe images that are not priority
            if (image.getAttribute('fetchpriority') !== 'high') {
                this.observer.observe(image);
            } else {
                // Load high priority images immediately
                this.loadImage(image);
            }
        });
    }
    
    loadImagesImmediately() {
        for (let i = 0; i < this.images.length; i++) {
            this.loadImage(this.images[i]);
        }
    }
    
    loadImage(image) {
        if (image.hasAttribute('data-large')) {
            image.setAttribute('data-placeholder', image.src);
            
            const largeImage = new Image();
            largeImage.src = image.getAttribute('data-large');
            
            largeImage.onload = () => {
                image.src = largeImage.src;
                image.classList.add('loaded');
            };
            
            largeImage.onerror = () => {
                console.error(`Error loading image: ${largeImage.src}`);
                // Keep the placeholder image
            };
        }
    }
}

window.BlurryImageLoad = BlurryImageLoad; 